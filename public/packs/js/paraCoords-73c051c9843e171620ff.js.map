{"version":3,"file":"js/paraCoords-73c051c9843e171620ff.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/paraCoords.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/paraCoords.js\");\n","const paraCoords = {\n\n\tcreateTypes: function(innerHeight){\n\t\tvar types = {\n\t\t  \"Number\": {\n\t\t    key: \"Number\",\n\t\t    coerce: function(d) { return +d; },\n\t\t    extent: d3.extent,\n\t\t    within: function(d, extent, dim) { return extent[0] <= dim.scale(d) && dim.scale(d) <= extent[1]; },\n\t\t    defaultScale: d3.scaleLinear().range([innerHeight, 0])\n\t\t  },\n\t\t  \"String\": {\n\t\t    key: \"String\",\n\t\t    coerce: String,\n\t\t    extent: function (data) { return data.sort(); },\n\t\t    within: function(d, extent, dim) { return extent[0] <= dim.scale(d) && dim.scale(d) <= extent[1]; },\n\t\t    defaultScale: d3.scalePoint().range([0, innerHeight])\n\t\t  },\n\t\t  \"Date\": {\n\t\t    key: \"Date\",\n\t\t    coerce: function(d) { return new Date(d); },\n\t\t    extent: d3.extent,\n\t\t    within: function(d, extent, dim) { return extent[0] <= dim.scale(d) && dim.scale(d) <= extent[1]; },\n\t\t    defaultScale: d3.scaleTime().range([innerHeight, 0])\n\t\t  }\n\t\t};\n\n\t\treturn types;\n\t},\n\tcreateStateSet: function(langs){\n\t\tlet allStates = langs.slice(1).map(el=> el[2]);\n    //slice state det to display on ly certain slices of the states\n    let stateSet = [...new Set(allStates)].sort();\n\n    return stateSet;\n\t},\n\n\tcreateLangSet: function(langs){\n\t\t// create a set of languages ordered from most spoke in the US to least spoken\n    let allLangs = langs.slice(1).map(el=> el[1]);\n    let langSet = new Set(allLangs);\n\n    // create a hash of languages with their totals, use this to sort\n    let langOrd = {}\n    langSet.forEach(el=>{\n      langs.slice(1).forEach(el2=>{\n        if(el == el2[1] && langOrd[el] == null)\n          langOrd[el] = +el2[0];\n        else if(el == el2[1])\n          langOrd[el] += +el2[0];\n      });      \n    });\n    \n    //  build an array to sort language object\n    let langOrdArr = [];\n    for(var key in langOrd){\n      langOrdArr.push([key, langOrd[key]]);\n    }\n    // sort the langugages\n    langOrdArr.sort((a,b)=> +b[1] - +a[1]);\n    // create an array of sroted langugages\n    langSet = langOrdArr.map(el=> el[0].replace(/ /g,\"_\").replace(/\\./g, \"\").replace(/\\,/g, \"\")); \n    // SLICE TO DISPLAY\n    return langSet = [...langSet];\n\t},\n\n\tcreateNewDataColl: function(stateSet, langSet, langs){\n\t\tvar newDataCollection = [];\n\n    var dataObj = {};\n\n    stateSet.forEach(el=> dataObj[el.replace(/ /g,\"_\").replace(/\\./g, \"\").replace(/\\,/g, \"\")] = '0');\n\n    var newdata = langSet.forEach(lang=>{\n      var nObj = Object.assign({}, dataObj)\n\n      nObj[\"LANLABEL\"] = lang.replace(/ /g,\"_\").replace(/\\./g, \"\").replace(/\\,/g, \"\");\n      langs.forEach(langArr=>{\n        if(langArr[1].replace(/ /g,\"_\").replace(/\\./g, \"\").replace(/\\,/g, \"\") == lang.replace(/ /g,\"_\").replace(/\\./g, \"\").replace(/\\,/g, \"\")){\n          nObj[langArr[2].replace(/ /g,\"_\").replace(/\\./g, \"\").replace(/\\,/g, \"\")] = langArr[0]\n        }\n      });\n      newDataCollection.push(nObj);\n    });\n    debugger\n    return newDataCollection;\n\t},\n\n\tcreateDimensions: function(stateSet, langSet, types){\n\t\tlet dimensions = [];\n\n    stateSet.forEach(el=>{\n      var obj = {\n        key: el.replace(/ /g,\"_\").replace(/\\./g, \"\").replace(/\\,/g, \"\"),\n        description: el,\n        type: types[\"Number\"]\n      }\n      dimensions.push(obj);\n    })\n\n    var langScaleObj = {\n      key: \"LANLABEL\",\n      description: \"Languages\",\n      type: types[\"String\"],\n      domain: [...langSet],\n      axis: d3.axisLeft()\n        .tickFormat(function(d,i) {\n          return d;\n        })\n    };\n\n    // Have the languages reconnect to the final axis, similar to wear they start\n    var langScaleObj2 = {\n      key: \"LANLABEL\",\n      description: \"\",\n      type: types[\"String\"],\n      domain: [...langSet],\n      // axis: d3.axisLeft()\n      //   .tickFormat(function(d,i) {\n      //     return d;\n      //   })\n    };\n    \n    dimensions.unshift(langScaleObj);\n    dimensions.push(langScaleObj2);\n\n    return dimensions;\n\t},\n\n\tbuildParaCoords: function(measures, stateSet, langSet, dimensions, data){\n    let margin = measures.mar,\n    \twidth = measures.wid,\n    \theight = measures.hgt,\n    \tinnerHeight = measures.inHgt,\n    \tdevicePixelRatio = measures.dPixRat;\n\n\t\tvar color = d3.scaleOrdinal()\n      .domain(langSet)\n      .range([\"#DB7F85\", \"#50AB84\", \"#4C6C86\", \"#C47DCB\", \"#B59248\", \"#DD6CA7\", \"#E15E5A\", \"#5DA5B3\", \"#725D82\", \"#54AF52\", \"#954D56\", \"#8C92E8\", \"#D8597D\", \"#AB9C27\", \"#D67D4B\", \"#D58323\", \"#BA89AD\", \"#357468\", \"#8F86C2\", \"#7D9E33\", \"#517C3F\", \"#9D5130\", \"#5E9ACF\", \"#776327\", \"#944F7E\"]);\n\n    var xscale = d3.scalePoint()\n        .domain(d3.range(dimensions.length))\n        .range([0, width]);\n\n    var yAxis = d3.axisLeft()\n      .tickValues([]);\n\n    var container = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"parcoords\")\n        .style(\"width\", width + margin.left + margin.right + \"px\")\n        .style(\"height\", height + margin.top + margin.bottom + \"px\");\n\n    var svg = container.append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var canvas = container.append(\"canvas\")\n        .attr(\"width\", width * devicePixelRatio)\n        .attr(\"height\", height * devicePixelRatio)\n        .style(\"width\", width + \"px\")\n        .style(\"height\", height + \"px\")\n        .style(\"margin-top\", margin.top + \"px\")\n        .style(\"margin-left\", margin.left + \"px\");\n\n    var ctx = canvas.node().getContext(\"2d\");\n    ctx.globalCompositeOperation = 'darken';\n    ctx.globalAlpha = 0.15;\n    ctx.lineWidth = 1.5;\n    ctx.scale(devicePixelRatio, devicePixelRatio);\n\n    var output = d3.select(\"body\").append(\"pre\");\n\n    var axes = svg.selectAll(\".axis\")\n        .data(dimensions)\n      .enter().append(\"g\")\n        .attr(\"class\", function(d) { return \"axis \" + d.key.replace(/ /g, \"_\").replace(/\\./g, \"\").replace(/\\,/g, \"\"); })\n        .attr(\"transform\", function(d,i) { return \"translate(\" + xscale(i) + \")\"; });\n//////////\n// begin building with the data\n    data.forEach(el=>{\n      \n      for(var key in el) {\n        if(el[key] == null){\n          \n          el[key] = \"0\";\n        }\n      }\n    });\n\n    data.forEach(function(d) {\n      dimensions.forEach(function(p) {\n        d[p.key] = !d[p.key] ? null : p.type.coerce(d[p.key]);\n      });\n\n      // truncate long text strings to fit in data table\n      for (var key in d) {\n        if (d[key] && d[key].length > 35) d[key] = d[key].slice(0,36);\n      }\n    });\n\n    // type/dimension default setting happens here\n    dimensions.forEach(function(dim) {\n      if (!(\"domain\" in dim)) {\n        // detect domain using dimension type's extent function\n        let dataExtent = data.map(function(d) { return d[dim.key]; });\n        dataExtent.sort((a,b)=>a-b);\n        let total = dataExtent.reduce((acc, el)=> acc+el,0)\n        // let greaterVal = dataExtent[dataExtent.length - 1]/5 + dataExtent[dataExtent.length - 1]\n        // dataExtent.push(greaterVal);\n        dataExtent.push(total);\n        \n        dim.domain = d3_functor(dim.type.extent)(dataExtent)//(data.map(function(d) { return d[dim.key]; }));\n      }\n      if (!(\"scale\" in dim)) {\n        // use type's default scale for dimension\n        dim.scale = dim.type.defaultScale.copy();\n      }\n      dim.scale.domain(dim.domain);\n    });\n\n    var render = renderQueue(draw).rate(30);\n\n    ctx.clearRect(0,0,width,height);\n    ctx.globalAlpha = d3.min([1.15/Math.pow(data.length,0.3),1]);\n    render(data);\n\n    axes.append(\"g\")\n        .each(function(d) {\n          var renderAxis = \"axis\" in d\n            ? d.axis.scale(d.scale)  // custom axis\n            : yAxis.scale(d.scale);  // default axis\n          d3.select(this).call(renderAxis);\n        })\n      .append(\"text\")\n        .attr(\"class\", \"title\")\n        .attr(\"text-anchor\", \"start\")\n        .text(function(d) { return \"description\" in d ? d.description : d.key; });\n\n    // Add and store a brush for each axis.\n    axes.append(\"g\")\n        .attr(\"class\", \"brush\")\n        .each(function(d) {\n          d3.select(this).call(d.brush = d3.brushY()\n            .extent([[-10,0], [10,height]])\n            .on(\"start\", brushstart)\n            .on(\"brush\", brush)\n            .on(\"end\", brush)\n          )\n        })\n      .selectAll(\"rect\")\n        .attr(\"x\", -8)\n        .attr(\"width\", 16);\n\n    d3.selectAll(\".axis.LANLABEL .tick text\")\n      .style(\"fill\", color);\n\n    output.text(d3.tsvFormat(data.slice(0,24)));\n\n    function project(d) {\n      return dimensions.map(function(p,i) {\n        // check if data element has property and contains a value\n        if (\n          !(p.key.replace(/ /g, \"_\").replace(/\\./g, \"\").replace(/\\,/g, \"\") in d) ||\n          d[p.key] === null\n\n        ) return null;\n\n        return [xscale(i),p.scale(d[p.key])];\n      });\n    }\n\n    function draw(d) {\n      ctx.strokeStyle = color(d.LANLABEL);\n      ctx.beginPath();\n      var coords = project(d);\n      coords.forEach(function(p,i) {\n        // this tricky bit avoids rendering null values as 0\n        if (p === null) {\n          // this bit renders horizontal lines on the previous/next\n          // dimensions, so that sandwiched null values are visible\n          if (i > 0) {\n            var prev = coords[i-1];\n            if (prev !== null) {\n              ctx.moveTo(prev[0],prev[1]);\n              ctx.lineTo(prev[0]+6,prev[1]);\n            }\n          }\n          if (i < coords.length-1) {\n            var next = coords[i+1];\n            if (next !== null) {\n              ctx.moveTo(next[0]-6,next[1]);\n            }\n          }\n          return;\n        }\n        \n        if (i == 0) {\n          ctx.moveTo(p[0],p[1]);\n          return;\n        }\n\n        ctx.lineTo(p[0],p[1]);\n      });\n      ctx.stroke();\n    }\n\n    function brushstart() {\n      d3.event.sourceEvent.stopPropagation();\n    }\n\n    // Handles a brush event, toggling the display of foreground lines.\n    function brush() {\n      render.invalidate();\n\n      var actives = [];\n      svg.selectAll(\".axis .brush\")\n        .filter(function(d) {\n          return d3.brushSelection(this);\n        })\n        .each(function(d) {\n          actives.push({\n            dimension: d,\n            extent: d3.brushSelection(this)\n          });\n        });\n\n      var selected = data.filter(function(d) {\n        if (actives.every(function(active) {\n            var dim = active.dimension;\n            // test if point is within extents for each active brush\n            return dim.type.within(d[dim.key], active.extent, dim);\n          })) {\n          return true;\n        }\n      });\n\n      ctx.clearRect(0,0,width,height);\n      ctx.globalAlpha = d3.min([0.85/Math.pow(selected.length,0.3),1]);\n      render(selected);\n\n      output.text(d3.tsvFormat(selected.slice(0,24)));\n    }\n\n\n    function d3_functor(v) {\n      return typeof v === \"function\" ? v : function() { return v; };\n    };\n\t}\n}\n\nmodule.exports = paraCoords;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClFA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAfA;AAwBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AARA;AACA;AAWA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AATA;AAWA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAIA;AAIA;AAGA;AAKA;AAMA;AAQA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AAIA;AAAA;AACA;AAEA;AAGA;AAMA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AADA;AACA;AA7VA;AAgWA;;;;A","sourceRoot":""}