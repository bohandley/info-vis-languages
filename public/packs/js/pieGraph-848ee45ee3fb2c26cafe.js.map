{"version":3,"file":"js/pieGraph-848ee45ee3fb2c26cafe.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/pieGraph.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/pieGraph.js\");\n","const pieGraph = {\n\tbuildPieGraph: function(stateDisplay, state) {\n\t  // set the dimensions and margins of the graph\n\t  var width = 330,\n\t      height = 270,\n\t      margin = 40;\n\n\t  // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n\t  var radius = Math.min(width, height) / 2 - margin;\n\n\t  // append the svg object to the div called 'my_dataviz'\n\t  var svg = stateDisplay\n\t    .append(\"svg\")\n\t      .attr(\"id\", \"pie-graph\")\n\t      .attr(\"width\", width)\n\t      .attr(\"height\", height)\n\t    .append(\"g\")\n\t      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + ((height / 2) + 15) + \")\");\n\n\t  // create real data\n\t  var //key1 = state.data[2][1], \n\t    key2 = state.data[4][1],\n\t    key3 = state.data[5][1],\n\t    key4 = state.data[6][1];\n\n\t  var keys = [key2, key3, key4];\n\n\t  var //val1 = state.data[2][0],\n\t    val2 = state.data[4][0],\n\t    val3 = state.data[5][0],\n\t    val4 = state.data[6][0];\n\n\t  var vals = [val2, val3, val4];\n\n\t  var data = {};\n\n\t  keys.forEach((el, i)=>{\n\t    data[el] = vals[i];\n\t  })\n\t  \n\t  // set the color scale\n\t  var color = d3.scaleOrdinal()\n\t    .domain(data)\n\t    .range([\"#8a89a6\", \"#7b6888\", \"#6b486b\"]);\n\n\t  // Compute the position of each group on the pie:\n\t  var pie = d3.pie()\n\t    .value(function(d) {return d.value; });\n\n\t  var data_ready = pie(d3.entries(data));\n\n\t  // make this into a function to rebuild the graph every time USCensu is called\n\t  // setTimeout(function(){ \n\t  svg\n\t    .selectAll('whatever')\n\t    .data(data_ready)\n\t    .enter()\n\t    .append('path')\n\t    .attr('d', d3.arc()\n\t      .innerRadius(0)\n\t      .outerRadius(radius)\n\t    )\n\t    .attr('fill', function(d){ return(color(d.data.key)) })\n\t    .attr(\"stroke\", \"black\")\n\t    .style(\"stroke-width\", \"1px\")\n\t    .on(\"click\", function(d) {\n\t        hoverInfo.style(\"display\", \"none\");\n\t        hoverInfo.style(\"display\", null);\n\t        var xPosition = d3.mouse(this)[0] - 5;\n\t        var yPosition = d3.mouse(this)[1] - 5;\n\t        hoverInfo.attr(\"transform\", \"translate(\" + xPosition + \",\" + yPosition + \")\");\n\t        hoverInfo.select(\"text\").text(d.value);\n\t    });\n\n\t  stateDisplay.append('svg')\n\t    .attr(\"id\", \"legend\")\n\t    .attr(\"dy\", width)\n\t      // .attr(\"height\", height)\n\t  // Add one dot in the legend for each name.\n\t  var legend = d3.select(\"#legend\")\n\n\t  legend.selectAll(\"mydots\")\n\t    .data(keys)//data)\n\t    .enter()\n\t    .append(\"circle\")\n\t      .attr(\"class\", \"circle\")\n\t      .attr(\"cx\", 40)\n\t      .attr(\"cy\", function(d,i){ return 265 + i*25}) // 100 is where the first dot appears. 25 is the distance between dots\n\t      .attr(\"r\", 7)\n\t      .style(\"fill\", function(d){ return color(d)})\n\n\t  // Add one dot in the legend for each name.\n\t  legend.selectAll(\"mylabels\")\n\t    .data(keys)//data)\n\t    .enter()\n\t    .append(\"text\")\n\t      .attr(\"x\", 60)\n\t      .attr(\"y\", function(d,i){ return 265 + i*25}) // 100 is where the first dot appears. 25 is the distance between dots\n\t      .style(\"fill\", function(d){ return color(d)})\n\t      .text(function(d){ return d})\n\t      .attr(\"text-anchor\", \"left\")\n\t      .attr(\"font-size\", \"12px\")\n\t      .style(\"alignment-baseline\", \"middle\")\n\t      // .style(\"opacity\", 0.7)\n\n\t  // create hover info\n\t  var hoverInfo = svg.append(\"g\")\n\t    .attr(\"class\", \"hover-info\")\n\t    .style(\"display\", \"none\");\n\t      \n\t  // TASK 2: build rect display for the tool tip  \n\t  hoverInfo.append(\"rect\")\n\t    .attr(\"width\", 60)\n\t    .attr(\"height\", 20)\n\t    .attr(\"rx\", 5)\n\t    .attr(\"ry\", 5)\n\t    .attr(\"fill\", \"white\")\n\t    .style(\"opacity\", 1);\n\n\t  // TASK 2: configure the text for the hoverInfo\n\t  hoverInfo.append(\"text\")\n\t    .attr(\"x\", 30)\n\t    .attr(\"dy\", \"1.2em\")\n\t    .style(\"text-anchor\", \"middle\")\n\t    .attr(\"font-size\", \"12px\")\n\t    .attr(\"font-weight\", \"bold\");\n\n\t}\n};\n\nmodule.exports = pieGraph;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AAQA;AACA;AADA;AAAA;AAKA;AAEA;AACA;AADA;AAAA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAAA;AAEA;AAGA;AACA;AAAA;AASA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AAEA;AAAA;AAMA;AAAA;AANA;AAQA;AAAA;AACA;AAEA;AAAA;AAKA;AAAA;AALA;AAMA;AAAA;AACA;AAAA;AAMA;AACA;AAAA;AACA;AAIA;AACA;AAQA;AAOA;AA/HA;AAkIA;;;;A","sourceRoot":""}