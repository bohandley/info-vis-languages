{"version":3,"file":"js/pieGraph-a4fd1792a9753b182ff0.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/pieGraph.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/pieGraph.js\");\n","const pieGraph = {\n\tbuildPieGraph: function(stateDisplay, state, choice) {\n\t\t// create data for either LAN& or LAN choice\n\t  let customArray, data;\n\t  \n\t  // create data for building the pie graph\n\t  // need array to map over data, \n\t  if(choice == 'LAN7'){\n\t  \tcustomArray = [4,5,6];\n\t  \tdata = this.createPieData(customArray, state.data);\n\t  } else if(choice == 'LAN'){\n\t  \tcustomArray = state.filtered.map((el,i)=> i);\n\t\t\tdata = this.createPieData(customArray, state.filtered);\n\t  }\n\n\t  // set the dimensions and margins of the graph\n\t  var width = 330,\n\t      height = 270,\n\t      margin = 40;\n\n\t  var radius = Math.min(width, height) / 2 - margin;\n\n\t  // attach pie graph holder\n\t  var svg = stateDisplay\n\t\t  .append(\"svg\")\n\t\t  \t.attr(\"id\", \"pie-graph\")\n\t\t    .attr(\"width\", width)\n\t\t    .attr(\"height\", height)\n\t\t  .append(\"g\")\n\t\t    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + ((height / 2) + 15) + \")\");\n\t\t\n\t\t// attach slices holders for pie graph\n\t\tsvg.append(\"g\").attr(\"class\", \"slices\");\n\n\t\t// attach legend placeholder for piegraph\n\t\tstateDisplay.append('svg')\n\t    .attr(\"id\", \"legend\")\n\t    .attr(\"dy\", width)\t  \n\n\t\t// create the first pie graph with transition\n\t\tpieGraph.update(data, svg, radius, state, stateDisplay);\n\t}, \n\n\tcreatePieData: function(customArray, data){\n\t  var keys = customArray.map((el)=> data[el][1]);\n\t  var vals = customArray.map((el)=> data[el][0]);\n\n\t  var newData = [];\n\t  \n\t  keys.forEach((el, i)=>{\n\t    newData.push({label: el, value: vals[i]});\n\t  })\n\n\t  return [newData, keys];\n\t},\n\n\t// DEFINE THIS\n\tmergeWithFirstEqualZero: function(first, second){\n\t  var secondSet = d3.set();\n\n\t  second.forEach(function(d) { secondSet.add(d.label); });\n\n\t  var onlyFirst = first\n\t    .filter(function(d){ return !secondSet.has(d.label) })\n\t    .map(function(d) { return {label: d.label, value: 0}; });\n\n\t  var sortedMerge = d3.merge([ second, onlyFirst ])\n\t    .sort(function(a, b) {\n\t        return d3.ascending(a.label, b.label);\n\t      });\n\n\t  return sortedMerge;\n\t},\n\t// REFACTOR THIS\n\tupdate: function(data, svg, radius, state, stateDisplay) {\n\t\t\tlet choice = state.choice;\n\n\t\t\tvar pie = d3.pie()\n\t\t\t  .sort(null)\n\t\t\t  .value(function(d) {\n\t\t\t    return d.value;\n\t\t\t  });\n\n\t\t\tvar arc = d3.arc()\n\t\t\t  .outerRadius(radius * 1.0)\n\t\t\t  .innerRadius(radius * 0.0);\n\n\t\t\tvar outerArc = d3.arc()\n\t\t\t  .innerRadius(radius * 0.5)\n\t\t\t  .outerRadius(radius * 1);\n\n\t\t  let keys = data[1];\n\n\t\t\tdata = data[0];\n\n\t\t\t// hard coded to check for 'other' display\n\t\t\tlet otherDisplay = false;\n\t\t\tif(data.length > 7)\n\t\t\t\totherDisplay = true;\n\n\t\t\tvar color = d3.scaleOrdinal(d3.schemePastel1.concat(d3.schemePastel1))\n\t\t    .domain(keys);\n\t\t\t\n\t    var duration = 500;\n\n\t    var oldData = svg.select(\".slices\")\n\t      .selectAll(\"path\")\n\t      .data().map(function(d) { return d.data });\n\n\t    if (oldData.length == 0) oldData = data;\n\n\t    var was = pieGraph.mergeWithFirstEqualZero(data, oldData);\n\t    var is = pieGraph.mergeWithFirstEqualZero(oldData, data);\n\n\t    var slice = svg.select(\".slices\")\n\t      .selectAll(\"path\")\n\t      .data(pie(was), d=>d.data.label);\n\n\t    slice.enter()\n\t      .insert(\"path\")\n\t      .attr(\"class\", \"slice\")\n\t      .attr(\"id\", d=>d.data.label.replace(/[,\\s]+/g, \"\"))\n\t      .style(\"fill\", function(d) { return color(d.data.label); })\n\t      .each(function(d) {\n\t          this._current = d;\n\t        })\n\t      .on(\"click\", function(d) {\n\t      \thoverInfo.style(\"display\", \"none\");\n\t      \td3.selectAll(\".slice\")\n\t\t    \t\t.style(\"stroke\", \"none\")\n\t\t    \t\t.style(\"stroke-width\", 0);\n\n\t      \tif(d.data.label==\"Other\"){\n\t      \t\tcustomArray = state.leftovers.map((el,i)=> i);\n\t      \t\tpieGraph.update(pieGraph.createPieData(customArray, state.leftovers), svg, radius, state, stateDisplay)\n\n\t      \t\tstateDisplay.append(\"foreignObject\")\n\t\t\t\t\t  \t.attr(\"id\", \"revert\")\n\t\t\t\t\t    .attr(\"x\", 75)\n\t\t\t\t\t    .attr(\"y\", 300)\n\t\t\t\t\t    .attr(\"width\", 60)\n\t\t\t\t\t    .attr(\"height\", 20)\n\n\t\t\t\t\t  stateDisplay.select(\"#revert\")\n\t\t\t\t\t    .append(\"xhtml:button\")\n\t\t\t\t\t    .attr(\"class\",\"rev\")\n\t\t\t\t\t    .text(\"Revert\")\n\t\t\t\t\t    .attr(\"x\", 300)\n\t\t\t\t\t    .attr(\"dy\", \"1.2em\")\n\t\t\t\t\t    .style(\"text-align\", \"center\")\n\t\t\t\t\t    .attr(\"font-size\", \"12px\")\n\t\t\t\t\t    .attr(\"font-weight\", \"bold\")\n\t\t\t\t\t    .on(\"click\", (d)=>{\n\t\t\t\t\t    \tstateDisplay.select(\"#revert\").remove();\n\t\t\t\t\t    \tstateDisplay.select(\"#other-display-select\").remove();\n\t\t\t\t\t    \tcustomArray = state.filtered.map((el,i)=> i);\n\t\t\t\t\t    \tdata = pieGraph.createPieData(customArray, state.filtered);\n\t\t\t\t\t    \tpieGraph.update(data, svg, radius, state, stateDisplay);\t\n\t\t\t\t\t    });\n\n\t      \t} else {\n\t\t        hoverInfo.style(\"display\", null);\n\t\t        var xPosition = d3.mouse(this)[0] - 5;\n\t\t        var yPosition = d3.mouse(this)[1] - 5;\n\t\t        hoverInfo.attr(\"transform\", \"translate(\" + xPosition + \",\" + yPosition + \")\");\n\t\t        hoverInfo.select(\"#hover-state-pop\").text(d.value.toLocaleString());\n\t\t        hoverInfo.select(\"#hover-state-name\").text(d.data.label);\n\n\t\t        d3.select(\"#\"+d.data.label.replace(/[,\\s]+/g, \"\"))\n\t\t\t    \t\t.style(\"stroke\", \"black\")\n\t\t\t    \t\t.style(\"stroke-width\", 2)\n\t      \t}\n\t    });\n\n\t    slice = svg.select(\".slices\")\n\t      .selectAll(\"path\")\n\t      .data(pie(is), d=>d.data.label);\n\n\t    slice.transition()\n\t      .duration(duration)\n\t      .attrTween(\"d\", function(d) {\n\t          var interpolate = d3.interpolate(this._current, d);\n\t          var _this = this;\n\t          return function(t) {\n\t              _this._current = interpolate(t);\n\t              return arc(_this._current);\n\t            };\n\t        });\n\n\t    slice = svg.select(\".slices\")\n\t      .selectAll(\"path\")\n\t      .data(pie(data), d=>d.data.label);\n\n\t    slice.exit()\n\t      .transition()\n\t      .delay(duration)\n\t      .duration(0)\n\t      .remove();\n\n\t    // make the legend for LAN7 and the top 5 LAN\n\t    var legend = d3.select(\"#legend\")\n\n\t    legend.selectAll(\"circle\").remove();\n\n\t    if(!otherDisplay){\n\t\t\t  let mydots = legend.selectAll(\"mydots\")\n\t\t\t    .data(keys)//data)\n\t\t\t    .enter()\n\t\t\t    .append(\"circle\")\n\t\t\t      .attr(\"class\", \"circle\")\n\t\t\t      .attr(\"value\", (d)=>{\n\t\t\t      \td.replace(/[,\\s]+/g, \"\")\n\t\t\t      })\n\t\t\t      .attr(\"cx\", function(d,i){\n\t\t\t      \tif(i < 3)\n\t\t\t      \t\treturn 40;\n\t\t\t      \telse\n\t\t\t      \t\treturn 200;\n\t\t\t      })\n\t\t\t      .attr(\"cy\", function(d,i){ \n\t\t\t      \tif(i < 3)\n\t\t\t\t      \treturn 265 + i*25\n\t\t\t\t      else\n\t\t\t\t      \treturn 265 + (i-3)*25\n\t\t\t      \t}) // 100 is where the first dot appears. 25 is the distance between dots\n\t\t\t      .attr(\"r\", 7)\n\t\t\t      .style(\"fill\", function(d){ return color(d)})\n\t\t\t      .on(\"click\", function(d) {\n\t\t\t\t    \thoverInfo.style(\"display\", \"none\");\n\n\t\t\t\t    \tlet val = d.replace(/[,\\s]+/g, \"\");\n\n\n\t\t\t\t    \td3.selectAll(\".slice\")\n\t\t\t\t    \t\t.style(\"stroke\", \"none\")\n\t\t\t\t    \t\t.style(\"stroke-width\", 0)\n\n\t\t\t\t    \td3.select(\"#\"+val)\n\t\t\t\t    \t\t.style(\"stroke\", \"black\")\n\t\t\t\t    \t\t.style(\"stroke-width\", 2)\n\t\t\t\t\t    \t\n\t\t\t\t    });\n\t\t\t}\n\n\t   \tlegend.selectAll(\"text\").remove();\n\t\t  \n\t   \tif(!otherDisplay){\n\t\t\t  // Add one dot in the legend for each name.\n\t\t\t  let mylabels = legend.selectAll(\"mylabels\")\n\t\t\t    .data(keys)//data)\n\t\t\t    .enter()\n\t\t\t    .append(\"text\")\n\t\t\t      .attr(\"x\", function(d,i){\n\t\t\t      \tif(i < 3)\n\t\t\t      \t\treturn 60;\n\t\t\t      \telse\n\t\t\t      \t\treturn 220;\n\t\t\t      })\n\t\t\t      .attr(\"y\", function(d,i){ \n\t\t\t      \tif(i < 3)\n\t\t\t\t      \treturn 265 + i*25\n\t\t\t\t      else\n\t\t\t\t      \treturn 265 + (i-3)*25\n\t\t\t      \t}) // 100 is where the first dot appears. 25 is the distance between dots\n\t\t\t      .style(\"fill\", \"grey\")//function(d){ return color(d)})\n\t\t\t      .text(function(d){ return d})\n\t\t\t      .attr(\"text-anchor\", \"left\")\n\t\t\t      .attr(\"font-size\", \"12px\")\n\t\t\t      .style(\"alignment-baseline\", \"middle\");\n\t\t\t}\n\n\t\t\t// make a select for the other display that\n\t\t\t// lists all the languages\n\t\t\tif(otherDisplay){\n\t\t\t\tstateDisplay.append(\"foreignObject\")\n\t\t\t\t\t.attr(\"id\", \"other-display-select\")\n\t\t\t\t\t.attr(\"x\", 75)\n\t\t\t    .attr(\"y\", 270)\n\t\t\t    .attr(\"width\", 250)\n\t\t\t    .attr(\"height\", 250)\n\n\t\t\t\tlet oDisplay = d3.select(\"#other-display-select\")\n\n\t\t\t\tlet opts = data.map(el=> [el.label+\" (\" + (+el.value).toLocaleString() + \")\", el.label]);\n\t\t\t\tdebugger\n\t\t\t\toDisplay\n\t\t\t    .append(\"xhtml:div\")\n\t\t\t    .attr(\"id\",\"other-container\")\n\n\t\t\t  oDisplay.select(\"#other-container\")\n\t\t\t    .append(\"xhtml:select\")\n\t\t\t    .attr(\"id\", \"other-select\")\n\n\t\t\t  oDisplay.select(\"#other-select\")\n\t\t\t    .selectAll(\"option\")\n\t\t\t    .data(opts)\n\t\t\t    .enter()\n\t\t\t    .append(\"xhtml:option\")\n\t\t\t    .text(function(d){\n\t\t\t      return d[0];\n\t\t\t    })\n\t\t\t    .attr(\"value\", function(d){\n\t\t\t      return d[1];\n\t\t\t    })\n\t\t\t    .attr(\"class\", \"year\");\n\n\t\t\t  oDisplay.select(\"select\")\n\t\t\t    .on(\"change\", function(d) {\n\t\t\t    \thoverInfo.style(\"display\", \"none\");\n\t\t\t    \t\n\t\t\t    \tlet val = this.value.replace(/[,\\s]+/g, \"\");\n\n\t\t\t    \td3.selectAll(\".slice\")\n\t\t\t    \t\t.style(\"stroke\", \"none\")\n\t\t\t    \t\t.style(\"stroke-width\", 0)\n\n\t\t\t    \td3.select(\"#\"+val)\n\t\t\t    \t\t.style(\"stroke\", \"black\")\n\t\t\t    \t\t.style(\"stroke-width\", 2)\n\t\t\t\t    \t\n\t\t\t    })\n\t\t\t}\n\n\t    svg.selectAll(\".hover-info\").remove();\n\t   \t  // create hover info\n\t\t  var hoverInfo = svg.append(\"g\")\n\t\t    .attr(\"class\", \"hover-info\")\n\t\t    .style(\"display\", \"none\");\n\t\t      \n\t\t  let width, height, x, dy;\n\t\t  \n\t\t  if(choice==\"LAN7\"){\n\t\t  \twidth = 60;\n\t\t  \theight = 20;\n\t\t  \tx = 30;\n\t\t  \tdy = \"1.2em\"; \n\t\t  } else if(choice==\"LAN\"){\n\t\t  \twidth = 90;\n\t\t  \theight = 33;\n\t\t  \tx = 45;\n\t\t  \tdy = \"2.2em\";\n\t\t  }\n\t\t  // TASK 2: build rect display for the tool tip  \n\t\t  hoverInfo.append(\"rect\")\n\t\t  \t.attr(\"id\", \"hover-info-rect\")\n\t\t    .attr(\"width\", width)\n\t\t    .attr(\"height\", height)\n\t\t    .attr(\"rx\", 5)\n\t\t    .attr(\"ry\", 5)\n\t\t    .attr(\"fill\", \"white\")\n\t\t    .style(\"opacity\", 1);\n\n\t\t  // TASK 2: configure the text for the hoverInfo\n\t\t  if(choice==\"LAN\"){\n\t\t\t  hoverInfo.append(\"text\")\n\t\t\t  \t.attr(\"id\", \"hover-state-name\")\n\t\t\t    .attr(\"x\", x)\n\t\t\t    .attr(\"dy\", \"1.2em\")\n\t\t\t    .style(\"text-anchor\", \"middle\")\n\t\t\t    .attr(\"font-size\", \"12px\")\n\t\t\t    .attr(\"font-weight\", \"bold\");\n\t\t  }\n\n\t\t  hoverInfo.append(\"text\")\n\t\t  \t.attr(\"id\", \"hover-state-pop\")\n\t\t    .attr(\"x\", x)\n\t\t    .attr(\"dy\", dy)\n\t\t    .style(\"text-anchor\", \"middle\")\n\t\t    .attr(\"font-size\", \"12px\")\n\t\t    .attr(\"font-weight\", \"bold\");\n\n\t\t}\n};\n\nmodule.exports = pieGraph;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AAQA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAIA;AAIA;AAEA;AACA;AAEA;AACA;AAGA;AAGA;AAEA;AAEA;AAAA;AAEA;AAEA;AACA;AAEA;AAEA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAOA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AAAA;AAEA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AACA;AAAA;AAMA;AACA;AAEA;AAIA;AAEA;AAIA;AAnBA;AAqBA;AAAA;AAEA;AAEA;AAGA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAIA;AAEA;AAIA;AAfA;AAAA;AAiBA;AAAA;AAIA;AAGA;AACA;AACA;AADA;AACA;AAOA;AAEA;AAAA;AAAA;AACA;AACA;AAIA;AAIA;AAMA;AACA;AAEA;AACA;AAGA;AAEA;AAEA;AAEA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AASA;AACA;AAOA;AACA;AACA;AAQA;AAnXA;AAsXA;;;;A","sourceRoot":""}